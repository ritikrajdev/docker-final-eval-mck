services:
  ###########################################################
  # Auth
  ###########################################################
  auth-postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: postgres
      PGUSER: postgres
      POSTGRES_DB: users
    volumes:
      - ../volumes/users:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready
      interval: 10s
      retries: 6

  auth-redis:
    image: redis

  auth-db-migrations:
    image: node:19-alpine
    environment:
      NODE_ENV: docker-dev
      DB_HOST: auth-postgres
      DB_NAME: users
      DB_USER: postgres
      DB_PASSWORD: 123456
      DB_PORT: 5432
    volumes:
      - ../user-auth/:/app
    depends_on:
      auth-postgres:
        condition: service_healthy
    working_dir: /app
    entrypoint: sh -c 'npm i && npm run migrate'

  auth-service:
    image: node:19-alpine
    environment:
      NODE_ENV: docker-dev
      DB_HOST: auth-postgres
      DB_NAME: users
      DB_USER: postgres
      DB_PASSWORD: 123456
      DB_PORT: 5432

      REDIS_HOST: auth-redis
      REDIS_PORT: 6379

      PORT: 4000

    volumes:
      - ../user-auth/:/app
    depends_on:
      auth-postgres:
        condition: service_healthy
      auth-redis:
        condition: service_started
      auth-db-migrations:
        condition: service_completed_successfully
    ports:
      - 4000:4000
    working_dir: /app
    entrypoint: sh -c 'npm i && npm run dev'


  ###########################################################
  # Backend
  ###########################################################
  backend-postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: postgres
      PGUSER: postgres
      POSTGRES_DB: users
    volumes:
      - ../volumes/backend:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready
      interval: 10s
      retries: 6

  backend-db-migrations:
    image: node:19-alpine
    environment:
      NODE_ENV: docker-dev
      DB_HOST: backend-postgres
      DB_NAME: users
      DB_USER: postgres
      DB_PASSWORD: 123456
      DB_PORT: 5432
    volumes:
      - ../backend/:/app
    depends_on:
      backend-postgres:
        condition: service_healthy
    working_dir: /app
    entrypoint: sh -c 'npm i && npm run migrate'

  backend-service:
    image: node:19-alpine
    environment:
      NODE_ENV: docker-dev
      DB_HOST: backend-postgres
      DB_NAME: users
      DB_USER: postgres
      DB_PASSWORD: 123456
      DB_PORT: 5432

      PORT: 8000

      AUTH_SERVER_BASE_URL: http://auth-service:4000

    volumes:
      - ../backend/:/app
    depends_on:
      backend-postgres:
        condition: service_healthy
      backend-db-migrations:
        condition: service_completed_successfully
      auth-service:
        condition: service_started
    ports:
      - 8000:8000
    working_dir: /app
    entrypoint: sh -c 'npm i && npm run dev'


  ###########################################################
  # Frontend
  ###########################################################
  frontend-service:
    image: node:19-alpine
    environment:
      REACT_APP_NODE_ENV: docker-dev
      REACT_APP_BACKEND_SERVER_BASE_URL: http://backend-service:8000
      REACT_APP_AUTH_SERVER_BASE_URL: http://auth-service:4000
    volumes:
      - ../frontend/:/app
    depends_on:
      backend-service:
        condition: service_started
    ports:
      - 3000:3000
    working_dir: /app
    entrypoint: sh -c 'npm i && npm start'
